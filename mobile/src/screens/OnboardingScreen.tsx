import React, { useState } from 'react';
import { View, StyleSheet, StatusBar, TouchableOpacity } from 'react-native';
import { Text, Surface, IconButton } from 'react-native-paper';
import { LinearGradient } from 'expo-linear-gradient';
import { SafeAreaView } from 'react-native-safe-area-context';

interface OnboardingScreenProps {
  onComplete: () => void;
}

const OnboardingScreen: React.FC<OnboardingScreenProps> = ({ onComplete }) => {
  const [currentStep, setCurrentStep] = useState(0);

  const steps = [
    {
      icon: 'üí´',
      title: 'FailShare„Å∏„Çà„ÅÜ„Åì„ÅùÔºÅ',
      description: 'Â§±Êïó„ÇíÊàêÈï∑„ÅÆÁ≥ß„Å´Â§â„Åà„Çã\nÂÆâÂÖ®„Å™„Ç≥„Éü„É•„Éã„ÉÜ„Ç£„Åß„Åô',
      details: [
        'ÂÆåÂÖ®ÂåøÂêç„ÅßÂ§±Êïó‰ΩìÈ®ì„ÇíÂÖ±Êúâ',
        'Âêå„ÅòÁµåÈ®ì„Çí„Åó„Åü‰∫∫ÂêåÂ£´„ÅßÂ≠¶„Å≥Âêà„ÅÑ',
        'ÊÅãÊÑõ„Éª‰ªï‰∫ã„Éª„Åù„ÅÆ‰ªñ„ÅÆÂ§±Êïó„Åã„ÇâÂ≠¶Áøí'
      ],
      buttonText: 'Âßã„ÇÅ„Çã'
    },
    {
      icon: 'üìù',
      title: 'Â§±ÊïóË´á„ÇíÊßãÈÄ†Âåñ„Åó„Å¶ÊäïÁ®ø',
      description: '„ÉÜ„É≥„Éó„É¨„Éº„Éà„Å´Ê≤ø„Å£„Å¶\n‰ΩìÈ®ì„ÇíÊï¥ÁêÜ„Åó„Çà„ÅÜ',
      details: [
        'Áä∂Ê≥Å: „Å©„Çì„Å™Áä∂Ê≥Å„Å†„Å£„Åü„Åã',
        'Ë°åÂãï: „Å©„ÅÜË°åÂãï„Åó„Åü„Åã',
        'ÁµêÊûú: „Å©„ÅÜ„Å™„Å£„Åü„Åã',
        'Â≠¶„Å≥: ‰Ωï„ÇíÂ≠¶„Çì„Å†„Åã'
      ],
      buttonText: 'Ê¨°„Å∏'
    },
    {
      icon: 'üîç',
      title: '„Ç´„ÉÜ„Ç¥„É™„Éº„Åã„ÇâÂ≠¶„Åº„ÅÜ',
      description: '„ÅÇ„Å™„Åü„Å´Âêà„Å£„ÅüÂ§±ÊïóË´á„Çí\nË¶ã„Å§„Åë„Çâ„Çå„Åæ„Åô',
      details: [
        'ÊÅãÊÑõ: „Éá„Éº„Éà„ÉªÂëäÁôΩ„Éª„Ç´„ÉÉ„Éó„É´„ÉªÁâáÊÉ≥„ÅÑ„ÉªÂà•„Çå',
        '‰ªï‰∫ã: ‰∫∫ÈñìÈñ¢‰øÇ„Éª„Ç≠„É£„É™„Ç¢„Éª„Éó„É¨„Çº„É≥„ÉªÁÆ°ÁêÜ',
        'ÊÑüÊÉÖ„Çø„Ç∞„ÅßÊ§úÁ¥¢ÔºàÂæåÊÇî„ÉªÊÅ•„Åö„Åã„Åó„ÅÑ„Éª‰∏çÂÆâ„Å™„Å©Ôºâ'
      ],
      buttonText: 'Ê¨°„Å∏'
    },
    {
      icon: 'ü§ù',
      title: '„Åø„Çì„Å™„ÅßÊîØ„ÅàÂêà„ÅÜ',
      description: 'ÂÖ±ÊÑü„Å®Âä±„Åæ„Åó„Åß\nÊàêÈï∑„ÅóÂêà„Åä„ÅÜ',
      details: [
        '„ÄåÂèÇËÄÉ„Å´„Å™„Å£„Åü„Äç„ÅßÂÖ±ÊÑü„ÇíË°®Áèæ',
        'Âêå„ÅòÂ§±Êïó„ÇíÁµåÈ®ì„Åó„Åü‰∫∫„Åã„Çâ„ÅÆÂä±„Åæ„Åó',
        'ÂÆü‰ΩìÈ®ì„Å´Âü∫„Å•„Åè„Ç¢„Éâ„Éê„Ç§„Çπ‰∫§Êèõ'
      ],
      buttonText: 'Ê¨°„Å∏'
    },
    {
      icon: 'üöÄ',
      title: 'Ê∫ñÂÇôÂÆå‰∫ÜÔºÅ',
      description: '„ÅÇ„Å™„Åü„ÇÇ‰ªäÊó•„Åã„Çâ\nFailShare„ÅÆ‰∏ÄÂì°„Åß„Åô',
      details: [
        'ÊúÄÂàù„ÅØ‰ªñ„ÅÆ‰∫∫„ÅÆÂ§±ÊïóË´á„ÇíË™≠„Çì„Åß„Åø„Çà„ÅÜ',
        'Ê∫ñÂÇô„Åå„Åß„Åç„Åü„Çâ„ÅÇ„Å™„Åü„ÅÆ‰ΩìÈ®ì„ÇÇÂÖ±Êúâ',
        '„ÅÇ„Å™„Åü„ÅÆÂ§±ÊïóË´á„ÅåË™∞„Åã„ÅÆÂ≠¶„Å≥„Å´„Å™„Çã'
      ],
      buttonText: '„Çπ„Çø„Éº„ÉàÔºÅ'
    }
  ];

  const currentStepData = steps[currentStep];

  const handleNext = () => {
    if (currentStep < steps.length - 1) {
      setCurrentStep(currentStep + 1);
    } else {
      onComplete();
    }
  };

  const handleSkip = () => {
    onComplete();
  };

  const handleBack = () => {
    if (currentStep > 0) {
      setCurrentStep(currentStep - 1);
    }
  };

  return (
    <SafeAreaView style={styles.container}>
      <StatusBar barStyle="light-content" backgroundColor="#1DA1F2" />
      
      {/* „É¢„ÉÄ„É≥„Éò„ÉÉ„ÉÄ„Éº */}
      <LinearGradient
        colors={['#1DA1F2', '#1991DB']}
        style={styles.modernHeader}
      >
        <View style={styles.headerContent}>
          {currentStep > 0 ? (
            <TouchableOpacity onPress={handleBack} style={styles.backButton}>
              <IconButton icon="arrow-left" size={24} iconColor="#FFFFFF" />
            </TouchableOpacity>
          ) : (
            <View style={styles.backButton} />
          )}
          <Text style={styles.headerTitle}>„ÅØ„Åò„ÇÅ„Å´</Text>
          <TouchableOpacity onPress={handleSkip} style={styles.skipButton}>
            <Text style={styles.skipText}>„Çπ„Ç≠„ÉÉ„Éó</Text>
          </TouchableOpacity>
        </View>
        
        {/* „Éó„É≠„Ç∞„É¨„Çπ„Éê„Éº */}
        <View style={styles.progressContainer}>
          <LinearGradient
            colors={['#FFFFFF30', '#FFFFFF10']}
            style={styles.progressTrack}
          >
            <LinearGradient
              colors={['#FFFFFF', '#FFFFFFCC']}
              style={[styles.progressFill, { width: `${((currentStep + 1) / steps.length) * 100}%` }]}
            />
          </LinearGradient>
          <Text style={styles.progressText}>
            {currentStep + 1}/{steps.length}
          </Text>
        </View>
      </LinearGradient>

      <View style={styles.content}>
        {/* „É°„Ç§„É≥„Ç≥„É≥„ÉÜ„É≥„ÉÑ */}
        <View style={styles.mainContent}>
          <Surface style={styles.iconContainer} elevation={3}>
            <Text style={styles.icon}>{currentStepData.icon}</Text>
          </Surface>
          
          <Text style={styles.title}>
            {currentStepData.title}
          </Text>
          
          <Text style={styles.description}>
            {currentStepData.description}
          </Text>

          <Surface style={styles.detailsCard} elevation={2}>
            {currentStepData.details.map((detail, index) => (
              <View key={index} style={styles.detailItem}>
                <View style={styles.detailDot} />
                <Text style={styles.detailText}>{detail}</Text>
              </View>
            ))}
          </Surface>
        </View>

        {/* „Éä„Éì„Ç≤„Éº„Ç∑„Éß„É≥„Éú„Çø„É≥ */}
        <View style={styles.navigationContainer}>
          <LinearGradient
            colors={['#1DA1F2', '#1991DB']}
            style={styles.nextButton}
          >
            <TouchableOpacity style={styles.nextButtonInner} onPress={handleNext}>
              <Text style={styles.nextButtonText}>
                {currentStepData.buttonText}
              </Text>
              {currentStep < steps.length - 1 && (
                <IconButton icon="arrow-right" size={20} iconColor="#FFFFFF" style={styles.nextIcon} />
              )}
            </TouchableOpacity>
          </LinearGradient>
        </View>
      </View>
    </SafeAreaView>
  );
};

const styles = StyleSheet.create({
  container: {
    flex: 1,
    backgroundColor: '#F8FAFC',
  },
  modernHeader: {
    paddingTop: 10,
    paddingBottom: 20,
    paddingHorizontal: 16,
  },
  headerContent: {
    flexDirection: 'row',
    alignItems: 'center',
    justifyContent: 'space-between',
    marginBottom: 16,
  },
  backButton: {
    width: 40,
  },
  headerTitle: {
    fontSize: 18,
    fontWeight: 'bold',
    color: '#FFFFFF',
    flex: 1,
    textAlign: 'center',
  },
  skipButton: {
    width: 60,
    alignItems: 'flex-end',
  },
  skipText: {
    fontSize: 14,
    color: '#FFFFFF',
    opacity: 0.9,
  },
  progressContainer: {
    flexDirection: 'row',
    alignItems: 'center',
  },
  progressTrack: {
    flex: 1,
    height: 6,
    borderRadius: 3,
    marginRight: 12,
  },
  progressFill: {
    height: '100%',
    borderRadius: 3,
  },
  progressText: {
    fontSize: 12,
    color: '#FFFFFF',
    opacity: 0.9,
    fontWeight: '600',
  },
  content: {
    flex: 1,
    paddingHorizontal: 20,
    paddingTop: 20,
  },
  mainContent: {
    flex: 1,
    alignItems: 'center',
    justifyContent: 'center',
  },
  iconContainer: {
    width: 100,
    height: 100,
    borderRadius: 50,
    backgroundColor: '#FFFFFF',
    alignItems: 'center',
    justifyContent: 'center',
    marginBottom: 32,
  },
  icon: {
    fontSize: 48,
  },
  title: {
    fontSize: 28,
    fontWeight: 'bold',
    textAlign: 'center',
    marginBottom: 16,
    color: '#1E293B',
    lineHeight: 36,
  },
  description: {
    fontSize: 18,
    textAlign: 'center',
    marginBottom: 32,
    color: '#64748B',
    lineHeight: 26,
  },
  detailsCard: {
    width: '100%',
    borderRadius: 16,
    backgroundColor: '#FFFFFF',
    padding: 24,
  },
  detailItem: {
    flexDirection: 'row',
    alignItems: 'flex-start',
    marginBottom: 16,
  },
  detailDot: {
    width: 6,
    height: 6,
    borderRadius: 3,
    backgroundColor: '#1DA1F2',
    marginTop: 8,
    marginRight: 12,
  },
  detailText: {
    fontSize: 16,
    color: '#475569',
    lineHeight: 24,
    flex: 1,
  },
  navigationContainer: {
    paddingVertical: 24,
  },
  nextButton: {
    borderRadius: 16,
    shadowColor: '#1DA1F2',
    shadowOffset: { width: 0, height: 4 },
    shadowOpacity: 0.3,
    shadowRadius: 8,
    elevation: 8,
  },
  nextButtonInner: {
    flexDirection: 'row',
    alignItems: 'center',
    justifyContent: 'center',
    paddingVertical: 16,
    paddingHorizontal: 24,
  },
  nextButtonText: {
    fontSize: 16,
    fontWeight: '600',
    color: '#FFFFFF',
  },
  nextIcon: {
    margin: 0,
    marginLeft: 8,
  },
});

export default OnboardingScreen; 