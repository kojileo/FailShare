name: CD

on:
  push:
    branches: [main, staging, develop]
  pull_request:
    branches: [main, staging]

env:
  PROJECT_ID: failshare-app
  REGION: asia-northeast1
  REPOSITORY: failshare-repo

jobs:
  deploy:
    name: Deploy to Cloud Run
    runs-on: ubuntu-latest
    permissions:
      contents: read
      id-token: write

    defaults:
      run:
        working-directory: ./mobile

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set environment variables
        run: |
          if [[ "${{ github.ref }}" == "refs/heads/main" ]]; then
            echo "ENVIRONMENT=production" >> $GITHUB_ENV
            echo "SERVICE_NAME=failshare-app" >> $GITHUB_ENV
            echo "FIREBASE_API_KEY=${{ secrets.PROD_FIREBASE_API_KEY }}" >> $GITHUB_ENV
            echo "FIREBASE_AUTH_DOMAIN=${{ secrets.PROD_FIREBASE_AUTH_DOMAIN }}" >> $GITHUB_ENV
            echo "FIREBASE_PROJECT_ID=${{ secrets.PROD_FIREBASE_PROJECT_ID }}" >> $GITHUB_ENV
            echo "FIREBASE_STORAGE_BUCKET=${{ secrets.PROD_FIREBASE_STORAGE_BUCKET }}" >> $GITHUB_ENV
            echo "FIREBASE_MESSAGING_SENDER_ID=${{ secrets.PROD_FIREBASE_MESSAGING_SENDER_ID }}" >> $GITHUB_ENV
            echo "FIREBASE_APP_ID=${{ secrets.PROD_FIREBASE_APP_ID }}" >> $GITHUB_ENV
          elif [[ "${{ github.ref }}" == "refs/heads/staging" ]]; then
            echo "ENVIRONMENT=staging" >> $GITHUB_ENV
            echo "SERVICE_NAME=failshare-app-staging" >> $GITHUB_ENV
            echo "FIREBASE_API_KEY=${{ secrets.STAGING_FIREBASE_API_KEY }}" >> $GITHUB_ENV
            echo "FIREBASE_AUTH_DOMAIN=${{ secrets.STAGING_FIREBASE_AUTH_DOMAIN }}" >> $GITHUB_ENV
            echo "FIREBASE_PROJECT_ID=${{ secrets.STAGING_FIREBASE_PROJECT_ID }}" >> $GITHUB_ENV
            echo "FIREBASE_STORAGE_BUCKET=${{ secrets.STAGING_FIREBASE_STORAGE_BUCKET }}" >> $GITHUB_ENV
            echo "FIREBASE_MESSAGING_SENDER_ID=${{ secrets.STAGING_FIREBASE_MESSAGING_SENDER_ID }}" >> $GITHUB_ENV
            echo "FIREBASE_APP_ID=${{ secrets.STAGING_FIREBASE_APP_ID }}" >> $GITHUB_ENV
          elif [[ "${{ github.ref }}" == "refs/heads/develop" ]]; then
            echo "ENVIRONMENT=development" >> $GITHUB_ENV
            echo "SERVICE_NAME=failshare-app-dev" >> $GITHUB_ENV
            echo "FIREBASE_API_KEY=${{ secrets.DEV_FIREBASE_API_KEY }}" >> $GITHUB_ENV
            echo "FIREBASE_AUTH_DOMAIN=${{ secrets.DEV_FIREBASE_AUTH_DOMAIN }}" >> $GITHUB_ENV
            echo "FIREBASE_PROJECT_ID=${{ secrets.DEV_FIREBASE_PROJECT_ID }}" >> $GITHUB_ENV
            echo "FIREBASE_STORAGE_BUCKET=${{ secrets.DEV_FIREBASE_STORAGE_BUCKET }}" >> $GITHUB_ENV
            echo "FIREBASE_MESSAGING_SENDER_ID=${{ secrets.DEV_FIREBASE_MESSAGING_SENDER_ID }}" >> $GITHUB_ENV
            echo "FIREBASE_APP_ID=${{ secrets.DEV_FIREBASE_APP_ID }}" >> $GITHUB_ENV
          else
            echo "ENVIRONMENT=development" >> $GITHUB_ENV
            echo "SERVICE_NAME=failshare-app-dev" >> $GITHUB_ENV
            echo "FIREBASE_API_KEY=${{ secrets.DEV_FIREBASE_API_KEY }}" >> $GITHUB_ENV
            echo "FIREBASE_AUTH_DOMAIN=${{ secrets.DEV_FIREBASE_AUTH_DOMAIN }}" >> $GITHUB_ENV
            echo "FIREBASE_PROJECT_ID=${{ secrets.DEV_FIREBASE_PROJECT_ID }}" >> $GITHUB_ENV
            echo "FIREBASE_STORAGE_BUCKET=${{ secrets.DEV_FIREBASE_STORAGE_BUCKET }}" >> $GITHUB_ENV
            echo "FIREBASE_MESSAGING_SENDER_ID=${{ secrets.DEV_FIREBASE_MESSAGING_SENDER_ID }}" >> $GITHUB_ENV
            echo "FIREBASE_APP_ID=${{ secrets.DEV_FIREBASE_APP_ID }}" >> $GITHUB_ENV
          fi

      - name: Google Auth
        id: auth
        uses: google-github-actions/auth@v2
        with:
          workload_identity_provider: ${{ secrets.WIF_PROVIDER }}
          service_account: ${{ secrets.WIF_SERVICE_ACCOUNT }}

      - name: Set up Cloud SDK
        uses: google-github-actions/setup-gcloud@v2

      - name: Authorize Docker push
        run: gcloud auth configure-docker asia-northeast1-docker.pkg.dev

      - name: Build and Push Container
        run: |
          docker build -t asia-northeast1-docker.pkg.dev/${{ env.PROJECT_ID }}/${{ env.REPOSITORY }}/${{ env.SERVICE_NAME }}:${{ github.sha }} . \
            --build-arg EXPO_PUBLIC_ENVIRONMENT="${{ env.ENVIRONMENT }}" \
            --build-arg EXPO_PUBLIC_FIREBASE_API_KEY="${{ env.FIREBASE_API_KEY }}" \
            --build-arg EXPO_PUBLIC_FIREBASE_AUTH_DOMAIN="${{ env.FIREBASE_AUTH_DOMAIN }}" \
            --build-arg EXPO_PUBLIC_FIREBASE_PROJECT_ID="${{ env.FIREBASE_PROJECT_ID }}" \
            --build-arg EXPO_PUBLIC_FIREBASE_STORAGE_BUCKET="${{ env.FIREBASE_STORAGE_BUCKET }}" \
            --build-arg EXPO_PUBLIC_FIREBASE_MESSAGING_SENDER_ID="${{ env.FIREBASE_MESSAGING_SENDER_ID }}" \
            --build-arg EXPO_PUBLIC_FIREBASE_APP_ID="${{ env.FIREBASE_APP_ID }}"
          docker push asia-northeast1-docker.pkg.dev/${{ env.PROJECT_ID }}/${{ env.REPOSITORY }}/${{ env.SERVICE_NAME }}:${{ github.sha }}

      - name: Deploy to Cloud Run
        uses: google-github-actions/deploy-cloudrun@v2
        with:
          service: ${{ env.SERVICE_NAME }}
          region: ${{ env.REGION }}
          image: asia-northeast1-docker.pkg.dev/${{ env.PROJECT_ID }}/${{ env.REPOSITORY }}/${{ env.SERVICE_NAME }}:${{ github.sha }}
          flags: '--allow-unauthenticated --port=8080 --memory=512Mi --cpu=1 --max-instances=10 --min-instances=0 --timeout=300 --concurrency=80'
          env_vars: |
            NODE_ENV=${{ env.ENVIRONMENT == 'production' && 'production' || 'development' }}
            EXPO_PUBLIC_ENVIRONMENT=${{ env.ENVIRONMENT }}

      - name: Show deployment info
        run: |
          SERVICE_URL=$(gcloud run services describe ${{ env.SERVICE_NAME }} \
            --region ${{ env.REGION }} \
            --format 'value(status.url)')
          echo "üöÄ Environment: ${{ env.ENVIRONMENT }}"
          echo "üè∑Ô∏è  Service: ${{ env.SERVICE_NAME }}"
          echo "üåê URL: $SERVICE_URL"
          echo "::notice title=Deployment Successful::Deployed ${{ env.ENVIRONMENT }} environment to $SERVICE_URL" 